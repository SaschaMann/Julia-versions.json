name: Build versions.json

on:
  workflow_dispatch:
  schedule:
    - cron: 34 12 * * *
  push:
    paths:
    - "build_json_map.jl"
    - "schema.json"
    - ".github/workflows/build-versions-file.yml"

env:
  aws_region: us-east-1
  s3_bucket: julialang2

jobs:
  build-json-map:
    runs-on: ubuntu-20.04
    steps:
        - uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # 2.3.3

        - name: Install dependencies
          run: julia --color=yes --project -e 'using Pkg; Pkg.instantiate()'

        - name: Check if there was a Julia release within the last week
          id: rebuild-check
          run: julia --color=yes --project rebuild_check.jl
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # If there was no Julia release within the last week and this is a scheduled build, the build ends here.
        # Manually dispatched builds via the workflow_dispatch trigger will ALWAYS run, regardless of the time of the last release.
        # Builds triggered by push events will also ALWAYS run but only upload to S3 if they are on the main branch,
        # because they could be caused by a change to the generation script in which case we want it to rebuild the file.
        
        - name: Create version map
          if: steps.rebuild-check.outputs.rebuild == 'true' || github.event_name != 'schedule'
          run: julia --color=yes --project build_json_map.jl versions.json
        
        # Upload version.json as workflow artifact for debugging purposes
        - uses: actions/upload-artifact@27bce4eee761b5bc643f46a8dfb41b430c8d05f6 # 2.2.0
          if: steps.rebuild-check.outputs.rebuild == 'true' || github.event_name != 'schedule'
          with:
            name: versions
            path: versions.json
            if-no-files-found: error
        
        - name: Validate versions.json against schema
          if: steps.rebuild-check.outputs.rebuild == 'true' || github.event_name != 'schedule'
          run: npx -p ajv-cli@3.3.0 ajv -s schema.json -d versions.json

        # The file will only be uploaded to S3 if the build ran on the main branch.

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@32d908adfb55576ba0c59f3c557058e80b5194c3 # 1.5.3
          if: github.ref == 'refs/heads/main' && (steps.rebuild-check.outputs.rebuild == 'true' || github.event_name != 'schedule')
          with:
            aws-access-key-id: ${{ secrets.AWS_DEPLOY_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_DEPLOY_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.aws_region }}
          
        - name: Upload versions.json to s3
          if: github.ref == 'refs/heads/main' && (steps.rebuild-check.outputs.rebuild == 'true' || github.event_name != 'schedule')
          run: |
            aws s3 cp versions.json s3://${{ env.s3_bucket }}/bin/versions.json --acl public-read --no-progress
